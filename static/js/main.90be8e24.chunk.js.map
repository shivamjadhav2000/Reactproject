{"version":3,"sources":["RowComponent.js","App.js","CHART.js","Nav.js","index.js"],"names":["RowComponent","props","className","type","onChange","e","handleInput","id","target","value","placeholder","name","onClick","handleRemove","App","useState","Math","floor","random","rowCmp","setrowCmp","cardCmp","setcardCmp","val","temp","index","findIndex","x","row","filter","item","map","i","length","j","CHART","chartData","setChartData","useEffect","labels","datasets","label","data","backgroundColor","borderWidth","style","height","width","margin","options","responsive","title","text","display","scales","yAxes","scaleLabel","labelString","gridLines","xAxes","Nav","navstyle","color","textDecoration","to","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.90be8e24.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction RowComponent(props) {\r\n    return (\r\n        <div className=\"rowComp\">\r\n            <input type=\"text\" onChange={(e)=>{props.handleInput(props.id,e.target.value,\"NAME\")}} placeholder=\"name\" value={props.name}/>\r\n            \r\n            <input type=\"text\" onChange={(e)=>{props.handleInput(props.id,e.target.value,\"VALUE\")}} placeholder=\"value\" value={props.value} />\r\n            <button onClick={()=>{props.handleRemove(props.id)}} className=\"remove\">X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowComponent\r\n","import React,{useState} from 'react'\r\nimport RowComponent from \"./RowComponent\"\r\n\r\nimport './App.css'\r\nfunction App() {\r\n    const [rowCmp,setrowCmp]=useState([{name:\"\",value:\"\",id:Math.floor(Math.random() * 1000)}])\r\n    const [cardCmp,setcardCmp]=useState([...rowCmp])\r\n    \r\n    const handleInput=(id,val,type)=>{\r\n        let temp=[...rowCmp]\r\n        let index = temp.findIndex(x => x.id ===id);\r\n        let row=temp[index]\r\n        if(type===\"NAME\"){\r\n            row.name=val\r\n            temp[index]=row\r\n             setrowCmp(temp)\r\n        }\r\n        else{\r\n            row.value=val\r\n            temp[index]=row\r\n            setrowCmp(temp)\r\n        }\r\n    }\r\n    const handleAddRow=()=>{\r\n        setrowCmp([...rowCmp,{name:\"\",value:\"\",id:Math.floor(Math.random()*1000)}])\r\n    }\r\n    const handleRemove = (id) => {\r\n        setrowCmp(rowCmp.filter(item => item.id !== id));\r\n        \r\n      }\r\n    const handleCreate=()=>{\r\n        let temp=[...rowCmp]\r\n\r\n        setcardCmp([...cardCmp,temp])\r\n        \r\n\r\n    }\r\n    return (\r\n        <div>\r\n        <div className=\"FormSec\">\r\n                {rowCmp.map((i,id)=>{return (\r\n                    <RowComponent name={i.name}\r\n                     id={i.id} \r\n                     handleRemove={handleRemove}\r\n                     handleInput={handleInput}\r\n                     />\r\n                )})}\r\n                <button onClick={handleAddRow} className=\"Add\">AddRow</button><br />\r\n        </div>\r\n        \r\n        <button onClick={handleCreate} className=\"creatCard\">Create Crad</button>\r\n        <div className=\"cardholder\">\r\n             { cardCmp.map((i,id)=>{\r\n                \r\n                    return (\r\n                       <div className=\"card\">\r\n                             {i.length>0 && i.map((j,id)=>{ \r\n                            return (\r\n                                <div className=\"CD\">\r\n                                        <p className=\"data\">Name:{j.name} value:{j.value} <span className=\"CId\">ID: {j.id}</span></p>\r\n                                        \r\n                                </div>\r\n                             )})}\r\n                       </div>\r\n                            )\r\n                \r\n             })}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nfunction CHART(){\r\n\r\n    const [chartData,setChartData]= useState({})\r\n    const chart=()=>{\r\n        setChartData({\r\n            labels:[\"1:00\",\"2:00\",\"3:00\",\"4:00\",\"5:00\",\"6:00\",\"7:00\",\"8:00\",\"9:00\",\"10:00\"],\r\n            datasets:[\r\n                {\r\n                    label:\"number of cases\",\r\n                    data:[120,244,200,189,19,299,342,241,221,278],\r\n                    backgroundColor:['rgba(75,192,192,0.6)'],\r\n                    borderWidth:4\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        chart()\r\n    }, [])\r\n    return (\r\n        <div style={{height:\"200px\",width:\"60%\",margin:\"2%\"}}>\r\n             <Line data={chartData} options={{\r\n                 responsive:true,\r\n                 title:{text:\"covid cases\",display:true},\r\n                 scales:{\r\n                     yAxes:[{\r\n                            scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'cases'},\r\n                            gridLines:{display:false}\r\n                            }],\r\n                     xAxes:[{\r\n                            scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'hour time'},\r\n                            gridLines:{display:false}}]\r\n                 }\r\n                 \r\n                 }}/>\r\n        </div>\r\n    )\r\n}\r\nexport default CHART","\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css'\r\nfunction Nav(){\r\n    const navstyle={\r\n        color:\"white\",\r\n        textDecoration:\"none\"\r\n    }\r\n    return (\r\n        <div className=\"nav\">\r\n             <h3>LOGO</h3>\r\n             <ul className=\"nav-links\">\r\n                 <Link style={navstyle} to=\"/Home\"><li><h3>home</h3></li></Link>\r\n                 <Link style={navstyle} to=\"/Chart\"><li><h3>Chart</h3></li></Link>\r\n             </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CHART from './CHART'\nimport Nav from './Nav'\nimport {BrowserRouter as Router,Switch,Route } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n  <div>\n    <Nav />\n    <Switch>\n            \n            <Route path=\"/Home\" component={App} />\n            <Route path=\"/Chart\" component={CHART}/>\n            <Route path=\"/\" component={App}/>\n    </Switch>\n    </div>\n    </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}